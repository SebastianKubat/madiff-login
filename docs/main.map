{"version":3,"file":"main.bundle.js","sources":["webpack:///./src/app/loggedin/index.ts","webpack:///./src/app/app.service.ts","webpack:///./src/app/home/index.ts","webpack:///./src/app/environment.ts","webpack:///./src/app/loggedin/auth.service.ts","webpack:///./src/app/no-content/index.ts","webpack:///./src async","webpack:///./src/app/index.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.resolver.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/home/title/index.ts","webpack:///./src/app/home/title/title.service.ts","webpack:///./src/app/home/x-large/index.ts","webpack:///./src/app/home/x-large/x-large.directive.ts","webpack:///./src/app/loggedin/auth-data.ts","webpack:///./src/app/loggedin/loggedin.component.ts","webpack:///./src/app/no-content/no-content.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/modal.html","webpack:///./src/app/app.component.css?e3a3","webpack:///./src/app/home/home.component.css?5810","webpack:///./src/main.browser.ts"],"sourcesContent":["export * from './loggedin.component';\nexport * from './auth-data';\nexport * from './auth.service';\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src?loader=system&genDir=compiled/src/app&aot=false!./src/app/loggedin/index.ts","import { Injectable } from '@angular/core';\n\nexport type InternalStateType = {\n  [key: string]: any\n};\n\n@Injectable()\nexport class AppState {\n\n  public _state: InternalStateType = { };\n\n  // already return a clone of the current state\n  public get state() {\n    return this._state = this._clone(this._state);\n  }\n  // never allow mutation\n  public set state(value) {\n    throw new Error('do not mutate the `.state` directly');\n  }\n\n  public get(prop?: any) {\n    // use our state getter for the clone\n    const state = this.state;\n    return state.hasOwnProperty(prop) ? state[prop] : state;\n  }\n\n  public set(prop: string, value: any) {\n    // internally mutate our state\n    return this._state[prop] = value;\n  }\n\n  private _clone(object: InternalStateType) {\n    // simple object clone\n    return JSON.parse(JSON.stringify( object ));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src?loader=system&genDir=compiled/src/app&aot=false!./src/app/app.service.ts","export * from './home.component';\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src?loader=system&genDir=compiled/src/app&aot=false!./src/app/home/index.ts","// Angular 2\nimport {\n  enableDebugTools,\n  disableDebugTools\n} from '@angular/platform-browser';\nimport {\n  ApplicationRef,\n  enableProdMode\n} from '@angular/core';\n// Environment Providers\nlet PROVIDERS: any[] = [\n  // common env directives\n];\n\n// Angular debug tools in the dev console\n// https://github.com/angular/angular/blob/86405345b781a9dc2438c0fbe3e9409245647019/TOOLS_JS.md\nlet _decorateModuleRef = <T>(value: T): T => { return value; };\n\nif ('production' === ENV) {\n  enableProdMode();\n\n  // Production\n  _decorateModuleRef = (modRef: any) => {\n    disableDebugTools();\n\n    return modRef;\n  };\n\n  PROVIDERS = [\n    ...PROVIDERS,\n    // custom providers in production\n  ];\n\n} else {\n\n  _decorateModuleRef = (modRef: any) => {\n    const appRef = modRef.injector.get(ApplicationRef);\n    const cmpRef = appRef.components[0];\n\n    let _ng = (<any> window).ng;\n    enableDebugTools(cmpRef);\n    (<any> window).ng.probe = _ng.probe;\n    (<any> window).ng.coreTokens = _ng.coreTokens;\n    return modRef;\n  };\n\n  // Development\n  PROVIDERS = [\n    ...PROVIDERS,\n    // custom providers in development\n  ];\n\n}\n\nexport const decorateModuleRef = _decorateModuleRef;\n\nexport const ENV_PROVIDERS = [\n  ...PROVIDERS\n];\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src?loader=system&genDir=compiled/src/app&aot=false!./src/app/environment.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { Router } from '@angular/router';\nimport { AuthData } from './auth-data';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class AuthService {\n    private headers: Headers;\n    private loginOk: boolean = false;\n    private isError: boolean = false;\n\n    constructor(private http: Http, private router: Router) {\n        this.headers = new Headers({\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        });\n    }\n\n    isLoggedIn() {\n        return this.loginOk;\n    }\n\n    logout() {\n        this.loginOk = false;\n        setTimeout(() => {\n            this.router.navigateByUrl('/');\n        });\n    }\n\n    areBadCredentials() {\n        return this.isError;\n    }\n\n    private loginSuccess() {\n        this.loginOk = true;\n        setTimeout(() => {\n            this.router.navigateByUrl('/loggedin');\n        });\n    }\n\n    private loginFail() {\n        console.log('login fail');\n        this.loginOk = false;\n        this.isError = true;\n        setTimeout(() => {\n            this.isError = false;\n        }, 2000);\n    }\n\n    trylogin(data: AuthData) {\n        console.log('data', data);\n        if (E2E) {\n            (new Observable<AuthData>((observer) => {\n                if (data.companyName === '111'\n                    && data.username === '222'\n                    && data.password === '333') {\n                    observer.next()\n                }\n                else observer.error()\n            })).subscribe(() => this.loginSuccess(),\n                (err) => this.loginFail())\n        } else {\n            return this.http.post('api/authenticate',\n                JSON.stringify(data),\n                { headers: this.headers }).subscribe(\n                () => this.loginSuccess(),\n                (err) => this.loginFail())\n        }\n\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src?loader=system&genDir=compiled/src/app&aot=false!./src/app/loggedin/auth.service.ts","export * from './no-content.component';\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src?loader=system&genDir=compiled/src/app&aot=false!./src/app/no-content/index.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 434;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 434\n// module chunks = 1","// App\nexport * from './app.module';\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src?loader=system&genDir=compiled/src/app&aot=false!./src/app/index.ts","/*\n * Angular 2 decorators and services\n */\nimport {\n  Component,\n  OnInit,\n  ViewEncapsulation\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AppState } from './app.service';\nimport { AuthService } from './loggedin';\nimport { HomeComponent } from './home';\nrequire('!style-loader!css-loader!bootstrap/dist/css/bootstrap.min.css');\n\n/*\n * App Component\n * Top Level Component\n */\n@Component({\n  selector: 'app',\n  encapsulation: ViewEncapsulation.None,\n  styles: [\n    require('./app.component.css')\n  ],\n  template: `\n  \n    <nav>\n    <ul class=\"nav nav-pills\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link disabled\"  style=\"cursor: default;\" href=\"#\">Account</a>\n    </li>\n    <li class=\"nav-item\" *ngIf=\"!isLoggedIn\" (click)=\"showLoginModal()\"  >\n      <a class=\"nav-link\" href=\"javascript:void(0)\" id=\"btsignin\" >sign in</a>\n    </li>\n    <li class=\"nav-item\" *ngIf=\"isLoggedIn\" >\n      <a class=\"nav-link\" href=\"javascript:void(0)\" id=\"btlogout\" (click)=\"logout()\" >logout</a>\n    </li>\n  </ul>\n    </nav>\n\n  <main>\n    <router-outlet></router-outlet>\n  </main>\n\n  `\n})\nexport class AppComponent implements OnInit {\n  public angularclassLogo = 'assets/img/angularclass-avatar.png';\n  public name = 'Angular 2 Webpack Starter';\n  public url = 'https://twitter.com/AngularClass';\n\n  constructor(\n    public appState: AppState,\n    private auth: AuthService,\n    private router: Router\n  ) { }\n\n  public ngOnInit() {\n    console.log('Initial App State', this.appState.state);\n    console.log('E2E', E2E)\n    console.log('E2E', typeof E2E)\n  }\n\n  get isLoggedIn() {\n    if (this.auth.isLoggedIn()) {\n      HomeComponent.hideModal();\n    }\n    return this.auth.isLoggedIn();\n  }\n\n  logout() {\n    this.auth.logout();\n  }\n\n  showLoginModal() {\n    HomeComponent.showModal();\n  }\n\n}\n\n/*\n * Please review the https://github.com/AngularClass/angular2-examples/ repo for\n * more angular app examples that you may copy/paste\n * (The examples may not be updated as quickly. Please open an issue on github for us to update it)\n * For help or questions please contact us at @AngularClass on twitter\n * or our chat on Slack at https://AngularClass.com/slack-join\n */\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src?loader=system&genDir=compiled/src/app&aot=false!./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport {\n  NgModule,\n  ApplicationRef\n} from '@angular/core';\nimport {\n  removeNgStyles,\n  createNewHosts,\n  createInputTransfer\n} from '@angularclass/hmr';\nimport {\n  RouterModule,\n  PreloadAllModules\n} from '@angular/router';\n\n\n\n/*\n * Platform and Environment providers/directives/pipes\n */\nimport { ENV_PROVIDERS } from './environment';\nimport { ROUTES } from './app.routes';\n// App is our top level component\nimport { AppComponent } from './app.component';\nimport { APP_RESOLVER_PROVIDERS } from './app.resolver';\nimport { AppState, InternalStateType } from './app.service';\nimport { HomeComponent } from './home';\nimport { LoggedinComponent, AuthService } from './loggedin';\nimport { NoContentComponent } from './no-content';\nimport { XLargeDirective } from './home/x-large';\nimport { ModalModule } from 'ng2-modal';\n\n// Application wide providers\nconst APP_PROVIDERS = [\n  ...APP_RESOLVER_PROVIDERS,\n  AppState,\n  AuthService\n];\n\ntype StoreType = {\n  state: InternalStateType,\n  restoreInputValues: () => void,\n  disposeOldHosts: () => void\n};\n\n/**\n * `AppModule` is the main entry point into Angular2's bootstraping process\n */\n@NgModule({\n  bootstrap: [ AppComponent ],\n  declarations: [\n    AppComponent,\n    LoggedinComponent,\n    HomeComponent,\n    NoContentComponent,\n    XLargeDirective\n  ],\n  imports: [ // import Angular's modules\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n     ModalModule,\n    RouterModule.forRoot(ROUTES, { useHash: true, preloadingStrategy: PreloadAllModules })\n  ],\n  providers: [ // expose our Services and Providers into Angular's dependency injection\n    ENV_PROVIDERS,\n    APP_PROVIDERS\n  ]\n})\nexport class AppModule {\n\n  constructor(\n    public appRef: ApplicationRef,\n    public appState: AppState\n  ) {}\n\n  public hmrOnInit(store: StoreType) {\n    if (!store || !store.state) {\n      return;\n    }\n    console.log('HMR store', JSON.stringify(store, null, 2));\n    // set state\n    this.appState._state = store.state;\n    // set input values\n    if ('restoreInputValues' in store) {\n      let restoreInputValues = store.restoreInputValues;\n      setTimeout(restoreInputValues);\n    }\n\n    this.appRef.tick();\n    delete store.state;\n    delete store.restoreInputValues;\n  }\n\n  public hmrOnDestroy(store: StoreType) {\n    const cmpLocation = this.appRef.components.map((cmp) => cmp.location.nativeElement);\n    // save state\n    const state = this.appState._state;\n    store.state = state;\n    // recreate root elements\n    store.disposeOldHosts = createNewHosts(cmpLocation);\n    // save input values\n    store.restoreInputValues  = createInputTransfer();\n    // remove styles\n    removeNgStyles();\n  }\n\n  public hmrAfterDestroy(store: StoreType) {\n    // display new elements\n    store.disposeOldHosts();\n    delete store.disposeOldHosts;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src?loader=system&genDir=compiled/src/app&aot=false!./src/app/app.module.ts","import { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/of';\n\n@Injectable()\nexport class DataResolver implements Resolve<any> {\n  public resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    return Observable.of({ res: 'I am data'});\n  }\n}\n\n// an array of services to resolve routes with data\nexport const APP_RESOLVER_PROVIDERS = [\n  DataResolver\n];\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src?loader=system&genDir=compiled/src/app&aot=false!./src/app/app.resolver.ts","import { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home';\nimport { LoggedinComponent } from './loggedin';\nimport { NoContentComponent } from './no-content';\n\nimport { DataResolver } from './app.resolver';\n\nexport const ROUTES: Routes = [\n  { path: '',      component: HomeComponent },\n  { path: 'home',  component: HomeComponent },\n  { path: 'loggedin', component: LoggedinComponent },\n  { path: '**',    component: NoContentComponent },\n];\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src?loader=system&genDir=compiled/src/app&aot=false!./src/app/app.routes.ts","import {\n  Component,\n  OnInit,\n  ViewContainerRef,\n  ViewChild,\n  AfterViewInit\n} from '@angular/core';\n\nimport { AppState } from '../app.service';\nimport { Title } from './title';\nimport { XLargeDirective } from './x-large';\nimport { AuthService, AuthData } from '../loggedin';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  // The selector is what angular internally uses\n  // for `document.querySelectorAll(selector)` in our index.html\n  // where, in this case, selector is the string 'home'\n  selector: 'home',  // <home></home>\n  // We need to tell Angular's Dependency Injection which providers are in our app.\n  providers: [\n    Title\n  ],\n  // Our list of styles in our component. We may add more to compose many styles together\n  styles: [require('./home.component.css')],\n  // Every Angular template is first compiled by the browser before Angular runs it's compiler\n  template: require('./modal.html') + require('./home.component.html')\n})\nexport class HomeComponent implements OnInit, AfterViewInit {\n\n  @ViewChild('myModal') modal: any;\n\n  // Set our default values\n  public localState = { value: '' };\n  // TypeScript public modifiers\n  constructor(\n    public appState: AppState,\n    public title: Title,\n    private vcRef: ViewContainerRef,\n    private auth: AuthService,\n    private router: Router\n  ) {\n\n  }\n\n  \n\n  ngAfterViewInit() {\n    this.modal['isError'] = () => this.auth.areBadCredentials();\n\n    this.modal['signIn'] = () => {\n      console.log('asdasd');\n      this.auth.trylogin({\n        companyName: <string>this.modal['companyName'],\n        username: <string>this.modal['username'],\n        password: <string>this.modal['password'],\n        rememberMe: true\n      })\n    }\n\n  }\n\n  e2eMode: boolean = E2E;\n\n  public ngOnInit() {\n    if (this.auth.isLoggedIn()) this.router.navigateByUrl('/loggedin');\n    else {\n      console.log('hello `Home` component');\n      HomeComponent.instance = this;\n    }\n\n    // this.title.getData().subscribe(data => this.data = data);\n  }\n\n  private static instance;\n  public static showModal() {\n    HomeComponent.instance['modal'].open();\n  }\n  public static hideModal() {\n    HomeComponent.instance['modal'].close();\n  }\n\n\n  public submitState(value: string) {\n    console.log('submitState', value);\n    this.appState.set('value', value);\n    this.localState.value = '';\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src?loader=system&genDir=compiled/src/app&aot=false!./src/app/home/home.component.ts","export * from './title.service';\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src?loader=system&genDir=compiled/src/app&aot=false!./src/app/home/title/index.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\n\n@Injectable()\nexport class Title {\n\n  public value = 'Angular 2';\n\n  constructor(\n    public http: Http\n  ) {}\n\n  public getData() {\n    console.log('Title#getData(): Get Data');\n    // return this.http.get('/assets/data.json')\n    // .map(res => res.json());\n    return {\n      value: 'AngularClass'\n    };\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src?loader=system&genDir=compiled/src/app&aot=false!./src/app/home/title/title.service.ts","export * from './x-large.directive';\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src?loader=system&genDir=compiled/src/app&aot=false!./src/app/home/x-large/index.ts","import {\n  Component,\n  Directive,\n  ElementRef,\n  Renderer\n} from '@angular/core';\n/*\n * Directive\n * XLarge is a simple directive to show how one is made\n */\n@Directive({\n  selector: '[x-large]' // using [ ] means selecting attributes\n})\nexport class XLargeDirective {\n  constructor(\n    public element: ElementRef,\n    public renderer: Renderer\n  ) {\n    // simple DOM manipulation to set font size to x-large\n    // `nativeElement` is the direct reference to the DOM element\n    // element.nativeElement.style.fontSize = 'x-large';\n\n    // for server/webworker support use the renderer\n    renderer.setElementStyle(element.nativeElement, 'fontSize', 'x-large');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src?loader=system&genDir=compiled/src/app&aot=false!./src/app/home/x-large/x-large.directive.ts","export interface AuthData {\n    companyName: string;\n    password: string;\n    rememberMe: boolean;\n    username: string;\n};\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src?loader=system&genDir=compiled/src/app&aot=false!./src/app/loggedin/auth-data.ts","import {\n  Component,\n  OnInit\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Component({\n  selector: 'loggedin',\n  styles: [`\n  `],\n  template: `\n    <h1 id=\"msgloggedin\" >You are logged in</h1>\n  `\n})\nexport class LoggedinComponent implements OnInit {\n\n  \n  constructor(\n    public route: ActivatedRoute,\n    public router: Router,\n    public auth: AuthService\n  ) {}\n\n  public ngOnInit() {\n    console.log('u r loggedi in')\n    if (!this.auth.isLoggedIn()) this.router.navigateByUrl('/');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src?loader=system&genDir=compiled/src/app&aot=false!./src/app/loggedin/loggedin.component.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'no-content',\n  template: `\n    <div>\n      <h1>404: page missing</h1>\n    </div>\n  `\n})\nexport class NoContentComponent {\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src?loader=system&genDir=compiled/src/app&aot=false!./src/app/no-content/no-content.component.ts","exports = module.exports = require(\"./../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"html, body{\\n  height: 100%;\\n  font-family: Arial, Helvetica, sans-serif\\n}\\n\\nspan.active {\\n  background-color: gray;\\n}\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./src/app/app.component.css\n// module id = 722\n// module chunks = 1","exports = module.exports = require(\"./../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"/*styles for home content only*/\\n\\n#alertError.active {\\n    opacity: 1.0;\\n}\\n\\n#alertError {\\n    position: absolute;\\n    z-index: 9999;\\n    display: block;\\n    pointer-events: none;\\n    width: 100%;\\n    top: 0px;\\n    right: 0px;\\n    opacity: 0;\\n\\n    -webkit-transition: all 1s ease-in;\\n    -moz-transition: all 1s ease-in;\\n    -ms-transition: all 1s ease-in;\\n    -o-transition: all 1s ease-in;\\n    transition: all 1s ease-in;\\n    max-height: 200px;\\n}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./src/app/home/home.component.css\n// module id = 723\n// module chunks = 1","module.exports = \"e2e mode: {{e2eMode}}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.html\n// module id = 726\n// module chunks = 1","module.exports = \"<modal  #myModal cancelButtonLabel=\\\"cancel\\\"  id=\\\"modalpopup\\\"\\nsubmitButtonLabel=\\\"submit\\\" modalClass=\\\"modal-lg modal-sm any-other-css-class\\\"\\n\\n    [hideCloseButton]=\\\"true\\\" [closeOnEscape]=\\\"true\\\" \\n    [closeOnOutsideClick]=\\\"true\\\" \\n     submitButtonLabel=\\\"sign in\\\"\\n     (onSubmit)=\\\"myModal.signIn()\\\"\\n     >\\n\\n    <modal-header></modal-header>\\n    \\n    <modal-content>\\n        \\n        <div class=\\\"alert alert-danger\\\" id=\\\"alertError\\\"\\n            [ngClass]=\\\"{'active': myModal.isError && myModal.isError()}\\\"\\n         role=\\\"alert\\\" >\\n            Failed to sign in! Please check your credentials and try again.            \\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"exampleInputEmail1\\\">Company Name</label>\\n            <input type=\\\"email\\\" [(ngModel)]=\\\"myModal.companyName\\\" class=\\\"form-control\\\" \\n            id=\\\"companyName\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter company name\\\">\\n            <!--<small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\">We'll never share your email with anyone else.</small>-->\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"exampleInputEmail1\\\">Username</label>\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"myModal.username\\\"\\n            id=\\\"username\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter username\\\">\\n            <!--<small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\">We'll never share your email with anyone else.</small>-->\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"exampleInputPassword1\\\">Password</label>\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"myModal.password\\\"\\n             id=\\\"password\\\" placeholder=\\\"Enter password\\\">\\n        </div>\\n        \\n    </modal-content>\\n\\n    \\n\\n</modal>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/modal.html\n// module id = 727\n// module chunks = 1","\n        var result = require(\"!!./../../node_modules/css-loader/index.js!./app.component.css\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 994\n// module chunks = 1","\n        var result = require(\"!!./../../../node_modules/css-loader/index.js!./home.component.css\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.css\n// module id = 995\n// module chunks = 1","/*\n * Angular bootstraping\n */\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { decorateModuleRef } from './app/environment';\nimport { bootloader } from '@angularclass/hmr';\n/*\n * App Module\n * our top level module that holds all of our components\n */\nimport { AppModule } from './app';\n\n/*\n * Bootstrap our Angular app with a top level NgModule\n */\nexport function main(): Promise<any> {\n  return platformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .then(decorateModuleRef)\n    .catch((err) => console.error(err));\n}\n\n// needed for hmr\n// in prod this is replace for document ready\nbootloader(main);\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src?loader=system&genDir=compiled/src/app&aot=false!./src/main.browser.ts"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACTA;AAOA;AAAA;AAEA;AA0BA;AAvBA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAJA;AAMA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AA5BA;AAAA;;AAAA;AA6BA;AAAA;;;;;;;;;;;ACnCA;AACA;AACA;;;;;;;;;ACDA;AAIA;AAIA;AACA;AAIA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAKA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAKA;AAEA;AAEA;;;;;;;;;;;;;ACxDA;AACA;AACA;AAEA;AAGA;AAKA;AAAA;AAAA;AAHA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AACA;AAKA;AAEA;AAhEA;AAAA;;AAAA;AAkEA;AAAA;;;;;;;;;;;;;;;ACxEA;AACA;AACA;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACNA;AACA;AACA;AACA;;;;;;;;;ACAA;AAKA;AACA;AACA;AACA;AACA;AAEA;;;AAGA;AA6BA;AAKA;AACA;AACA;AACA;AAPA;AACA;AACA;AAMA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AA1DA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAqBA;;AAAA;AAiCA;AAAA;AAEA;;;;;;AAMA;;;;;;;;;;;;;;;ACtFA;AACA;AACA;AACA;AAIA;AAKA;AAUA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAQA;;AAEA;AAsBA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AA/DA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AA6CA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClHA;AACA;AACA;AAGA;AAAA;AAIA;AAHA;AACA;AACA;AAJA;AAAA;;AAAA;AAKA;AAAA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACdA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACZA;AAQA;AACA;AAEA;AACA;AAiBA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AA6BA;AAnBA;AAIA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAzDA;AAAA;;AAAA;AAhBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AA6DA;AAAA;;;;;;;;;;;;;;;ACzFA;AACA;AACA;;;;;;;;;ACFA;AACA;AAGA;AAIA;AACA;AAHA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAAA;;AAAA;AAkBA;AAAA;;;;;;;;;;;;ACrBA;AACA;AACA;;;;;;;;;ACFA;AAMA;;;AAGA;AAIA;AACA;AAIA;AACA;AACA;AALA;AACA;AAMA;AACA;AACA;AAdA;AAAA;AACA;AACA;;AAAA;AAaA;AAAA;;;;;;;;;;ACpBA;;;;;;;;;ACLA;AAIA;AACA;AAUA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AApBA;AAAA;AACA;AACA;AAEA;AAGA;;AAAA;AAeA;AAAA;;;;;;;;;;;;;AC7BA;AAUA;AAAA;AAEA;AAVA;AAAA;AACA;AACA;AAKA;;AAAA;AAGA;AAAA;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;;;;;;;ACAA;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACLA;AACA;AACA;AAKA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","sourceRoot":""}